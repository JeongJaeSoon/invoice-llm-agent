name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.setup.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and Poetry
        id: setup
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: "3.12"
          restore-only: "false"

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: "3.12"
          cache-key: ${{ needs.setup.outputs.cache-key }}
          restore-only: "true"

      - name: Run linting
        run: |
          poetry run ruff check .
          poetry run black --check .
          poetry run isort --check-only .
          poetry run mypy src/

  test:
    needs: setup
    runs-on: ubuntu-latest
    env:
      APP_ENVIRONMENT: test
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python and Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: "3.12"
          cache-key: ${{ needs.setup.outputs.cache-key }}
          restore-only: "true"

      - name: Run tests
        run: poetry run pytest tests/ --cov=src --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
