name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-python-poetry

      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            .venv
            ~/.local
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-

      - name: Set cache key
        id: cache-key
        run: echo "cache-key=poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}" >> $GITHUB_OUTPUT

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: |
            .venv
            ~/.local
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Run linting
        run: |
          poetry run ruff check .
          poetry run black --check .
          poetry run isort --check-only .
          poetry run mypy src/

  test:
    needs: setup
    runs-on: ubuntu-latest
    env:
      APP_ENVIRONMENT: test
    steps:
      - uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v3
        with:
          path: |
            .venv
            ~/.local
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true

      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Run tests
        run: poetry run pytest tests/ --cov=src --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
