name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run tests
        env:
          APP_ENVIRONMENT: "test"
          APP_OPENAI_API_KEY: "dummy_key_for_test"
          APP_INTERNAL_API_URL: "http://test.example.com"
          APP_INTERNAL_API_KEY: "dummy_internal_key_for_test"
        run: |
          poetry run pytest tests/ --cov=src --cov-report=xml -v

      - name: Run linting
        run: |
          poetry run ruff check .
          poetry run black --check .
          poetry run isort --check-only .
          poetry run mypy src/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
